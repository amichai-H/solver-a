//
// Created by amichai hadad on 28/04/2020.
//
#include "doctest.h"
#include <iostream>
#include <stdexcept>
#include <complex>
#include "solver.hpp"

using namespace std;
using solver::solve, solver::RealVariable, solver::ComplexVariable;

TEST_CASE("100 tests") {
    RealVariable x;

    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);
    CHECK(solve(2*x-4 == 10)==7);
    CHECK(solve(x-4 == 8)==12);
    CHECK(solve(x-2 == 8)==10);

}
